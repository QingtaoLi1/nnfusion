[
  {
    "nodes": [
      3
    ],
    "node_names": [
      "fused_op_3"
    ],
    "group_id": 0,
    "input_desc": [
      [
        3,
        0
      ],
      [
        3,
        1
      ],
      [
        3,
        2
      ]
    ],
    "output_desc": [
      [
        3,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group0(half* __restrict__ input0, half* __restrict__ input1, float* __restrict__ input2, half* __restrict__ output0) {\n  __shared__ float input2_shared[64];\n  __shared__ half input1_shared[64];\n  if (((int)threadIdx.x) < 64) {\n    input2_shared[((int)threadIdx.x)] = input2[(((((int)blockIdx.x) >> 7) * 64) + ((int)threadIdx.x))];\n  }\n  if (((int)threadIdx.x) < 64) {\n    input1_shared[((int)threadIdx.x)] = input1[(((((int)blockIdx.x) & 127) * 64) + ((int)threadIdx.x))];\n  }\n  __syncthreads();\n  output0[(((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2))] = (((half)(((float)input0[(((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2))]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 3)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 7) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 16)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 16)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 3)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 16)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 32)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 32)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 3)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 48)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 48)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 3)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 48)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131072)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131072)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 16)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 7) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131088)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131088)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 16)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131104)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131104)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131120)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131120)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 48)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262144)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262144)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 32)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 7) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262160)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262160)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 32)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 16)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262176)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262176)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 32)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262192)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262192)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 32)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 48)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393216)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393216)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 48)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 7) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393232)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393232)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 48)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 16)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393248)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393248)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 48)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393264)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393264)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 48)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 48)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 1)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 1)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 3)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 17)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 17)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 3)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 17)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 33)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 33)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 3)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 33)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 49)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 49)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 3)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 49)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131073)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131073)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131089)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131089)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 17)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131105)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131105)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 33)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131121)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131121)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 49)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262145)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262145)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 32)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262161)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262161)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 32)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 17)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262177)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262177)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 32)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 33)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262193)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 262193)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 32)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 49)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393217)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393217)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 48)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393233)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393233)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 48)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 17)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393249)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393249)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 48)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 33)]);\n  output0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393265)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 7) * 524288) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 393265)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 3) + 48)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 7) * 2) + 49)]);\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      8192,
      1,
      1
    ],
    "latency": 0.27917909622192383,
    "name": "Group0",
    "gain": 0
  }
]