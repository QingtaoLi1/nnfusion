[
  {
    "nodes": [
      3
    ],
    "node_names": [
      "fused_op_3"
    ],
    "group_id": 0,
    "input_desc": [
      [
        3,
        0
      ],
      [
        3,
        1
      ],
      [
        3,
        2
      ]
    ],
    "output_desc": [
      [
        3,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group0(half* __restrict__ input0, half* __restrict__ input1, float* __restrict__ input2, half* __restrict__ output0) {\n  __shared__ float input2_shared[32];\n  __shared__ half input1_shared[64];\n  if (((int)threadIdx.x) < 32) {\n    input2_shared[((int)threadIdx.x)] = input2[(((((int)blockIdx.x) >> 6) * 32) + ((int)threadIdx.x))];\n  }\n  if (((int)threadIdx.x) < 64) {\n    input1_shared[((int)threadIdx.x)] = input1[(((((int)blockIdx.x) & 63) * 64) + ((int)threadIdx.x))];\n  }\n  __syncthreads();\n  output0[(((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2))] = (((half)(((float)input0[(((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2))]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 4)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 15) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 4)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32768)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32768)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 8)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 15) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32800)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32800)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 8)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65536)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65536)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 16)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 15) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65568)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65568)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 98304)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 98304)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 24)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 15) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 98336)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 98336)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 24)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 1)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 4)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 33)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 33)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 4)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32769)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32769)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 8)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32801)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32801)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 8)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65537)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65537)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65569)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65569)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 98305)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 98305)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 24)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 98337)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 131072) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 63) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 98337)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 24)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]);\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      2048,
      1,
      1
    ],
    "latency": 0.015557516366243362,
    "name": "Group0",
    "gain": 0
  }
]