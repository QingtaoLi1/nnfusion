[
  {
    "nodes": [
      5
    ],
    "node_names": [
      "fused_op_5"
    ],
    "group_id": 0,
    "input_desc": [
      [
        5,
        0
      ],
      [
        5,
        1
      ],
      [
        5,
        2
      ],
      [
        5,
        3
      ],
      [
        5,
        4
      ]
    ],
    "output_desc": [
      [
        5,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group0(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ input2, float* __restrict__ input3, float* __restrict__ input4, half* __restrict__ output0) {\n  \n  __shared__ half input2_shared[64];\n  if (((int)threadIdx.x) < 64) {\n    input2_shared[((int)threadIdx.x)] = input2[(((((int)blockIdx.x) & 127) * 64) + ((int)threadIdx.x))];\n  }\n  __syncthreads();\n  output0[(((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2))] = ((half)((((float)(input0[(((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2))] * input2_shared[((((int)threadIdx.x) & 7) * 2)])) / sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) + ((((input4[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))] * -5.000000e-01f) / (sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))]) * input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) * 2.441406e-04f) * ((float)input1[(((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2))]))));\n  output0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 16)] = ((half)((((float)(input0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 16)] * input2_shared[(((((int)threadIdx.x) & 7) * 2) + 16)])) / sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) + ((((input4[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))] * -5.000000e-01f) / (sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))]) * input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) * 2.441406e-04f) * ((float)input1[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 16)]))));\n  output0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 32)] = ((half)((((float)(input0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 32)] * input2_shared[(((((int)threadIdx.x) & 7) * 2) + 32)])) / sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) + ((((input4[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))] * -5.000000e-01f) / (sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))]) * input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) * 2.441406e-04f) * ((float)input1[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 32)]))));\n  output0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 48)] = ((half)((((float)(input0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 48)] * input2_shared[(((((int)threadIdx.x) & 7) * 2) + 48)])) / sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) + ((((input4[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))] * -5.000000e-01f) / (sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))]) * input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) * 2.441406e-04f) * ((float)input1[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 48)]))));\n  output0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131072)] = ((half)((((float)(input0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131072)] * input2_shared[((((int)threadIdx.x) & 7) * 2)])) / sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) + ((((input4[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)] * -5.000000e-01f) / (sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)]) * input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) * 2.441406e-04f) * ((float)input1[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131072)]))));\n  output0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131088)] = ((half)((((float)(input0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131088)] * input2_shared[(((((int)threadIdx.x) & 7) * 2) + 16)])) / sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) + ((((input4[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)] * -5.000000e-01f) / (sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)]) * input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) * 2.441406e-04f) * ((float)input1[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131088)]))));\n  output0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131104)] = ((half)((((float)(input0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131104)] * input2_shared[(((((int)threadIdx.x) & 7) * 2) + 32)])) / sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) + ((((input4[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)] * -5.000000e-01f) / (sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)]) * input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) * 2.441406e-04f) * ((float)input1[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131104)]))));\n  output0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131120)] = ((half)((((float)(input0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131120)] * input2_shared[(((((int)threadIdx.x) & 7) * 2) + 48)])) / sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) + ((((input4[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)] * -5.000000e-01f) / (sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)]) * input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) * 2.441406e-04f) * ((float)input1[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131120)]))));\n  output0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 1)] = ((half)((((float)(input0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 1)] * input2_shared[(((((int)threadIdx.x) & 7) * 2) + 1)])) / sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) + ((((input4[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))] * -5.000000e-01f) / (sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))]) * input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) * 2.441406e-04f) * ((float)input1[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 1)]))));\n  output0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 17)] = ((half)((((float)(input0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 17)] * input2_shared[(((((int)threadIdx.x) & 7) * 2) + 17)])) / sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) + ((((input4[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))] * -5.000000e-01f) / (sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))]) * input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) * 2.441406e-04f) * ((float)input1[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 17)]))));\n  output0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 33)] = ((half)((((float)(input0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 33)] * input2_shared[(((((int)threadIdx.x) & 7) * 2) + 33)])) / sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) + ((((input4[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))] * -5.000000e-01f) / (sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))]) * input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) * 2.441406e-04f) * ((float)input1[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 33)]))));\n  output0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 49)] = ((half)((((float)(input0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 49)] * input2_shared[(((((int)threadIdx.x) & 7) * 2) + 49)])) / sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) + ((((input4[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))] * -5.000000e-01f) / (sqrtf(input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))]) * input3[(((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3))])) * 2.441406e-04f) * ((float)input1[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 49)]))));\n  output0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131073)] = ((half)((((float)(input0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131073)] * input2_shared[(((((int)threadIdx.x) & 7) * 2) + 1)])) / sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) + ((((input4[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)] * -5.000000e-01f) / (sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)]) * input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) * 2.441406e-04f) * ((float)input1[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131073)]))));\n  output0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131089)] = ((half)((((float)(input0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131089)] * input2_shared[(((((int)threadIdx.x) & 7) * 2) + 17)])) / sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) + ((((input4[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)] * -5.000000e-01f) / (sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)]) * input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) * 2.441406e-04f) * ((float)input1[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131089)]))));\n  output0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131105)] = ((half)((((float)(input0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131105)] * input2_shared[(((((int)threadIdx.x) & 7) * 2) + 33)])) / sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) + ((((input4[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)] * -5.000000e-01f) / (sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)]) * input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) * 2.441406e-04f) * ((float)input1[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131105)]))));\n  output0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131121)] = ((half)((((float)(input0[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131121)] * input2_shared[(((((int)threadIdx.x) & 7) * 2) + 49)])) / sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) + ((((input4[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)] * -5.000000e-01f) / (sqrtf(input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)]) * input3[((((((int)blockIdx.x) >> 7) * 32) + (((int)threadIdx.x) >> 3)) + 16)])) * 2.441406e-04f) * ((float)input1[((((((((int)blockIdx.x) >> 7) * 262144) + ((((int)threadIdx.x) >> 3) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 7) * 2)) + 131121)]))));\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      256,
      1,
      1
    ],
    "latency": 0.007305394392460585,
    "name": "Group0",
    "gain": 0
  }
]