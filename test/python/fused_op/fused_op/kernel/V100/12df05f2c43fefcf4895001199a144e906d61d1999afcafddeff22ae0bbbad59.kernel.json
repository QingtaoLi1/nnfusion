[
  {
    "nodes": [
      3
    ],
    "node_names": [
      "fused_op_3"
    ],
    "group_id": 0,
    "input_desc": [
      [
        3,
        0
      ],
      [
        3,
        1
      ],
      [
        3,
        2
      ]
    ],
    "output_desc": [
      [
        3,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group0(half* __restrict__ input0, half* __restrict__ input1, float* __restrict__ input2, half* __restrict__ output0) {\n  __shared__ float input2_shared[64];\n  __shared__ half input1_shared[128];\n  if (((int)threadIdx.x) < 64) {\n    input2_shared[((int)threadIdx.x)] = input2[(((((int)blockIdx.x) >> 6) * 64) + ((int)threadIdx.x))];\n  }\n  input1_shared[((int)threadIdx.x)] = input1[(((((int)blockIdx.x) & 63) * 128) + ((int)threadIdx.x))];\n  __syncthreads();\n  output0[(((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2))] = (((half)(((float)input0[(((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2))]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 4)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 15) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 32)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 32)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 4)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 64)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 64)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 4)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 96)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 96)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 4)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65536)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65536)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 8)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 15) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65568)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65568)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 8)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65600)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65600)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 8)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65632)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65632)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 8)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131072)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131072)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 16)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 15) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131104)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131104)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131136)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131136)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131168)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131168)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196608)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196608)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 24)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 15) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196640)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196640)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 24)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196672)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196672)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 24)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196704)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196704)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 24)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262144)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262144)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 32)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 15) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262176)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262176)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 32)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262208)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262208)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 32)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262240)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262240)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 32)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327680)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327680)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 40)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 15) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327712)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327712)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 40)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327744)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327744)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 40)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327776)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327776)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 40)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393216)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393216)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 48)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 15) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393248)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393248)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 48)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393280)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393280)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 48)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393312)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393312)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 48)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458752)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458752)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 56)] + 1.000000e-06f)))) * input1_shared[((((int)threadIdx.x) & 15) * 2)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458784)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458784)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 56)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458816)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458816)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 56)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458848)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458848)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 56)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 1)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 4)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 33)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 33)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 4)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 4)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 97)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 97)]) / sqrtf((input2_shared[(((int)threadIdx.x) >> 4)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65537)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65537)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 8)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65569)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65569)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 8)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65601)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65601)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 8)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65633)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65633)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 8)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131073)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131073)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131105)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131105)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131137)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131137)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131169)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 131169)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 16)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196609)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196609)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 24)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196641)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196641)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 24)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196673)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196673)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 24)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196705)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 196705)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 24)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262145)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262145)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 32)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262177)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262177)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 32)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262209)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262209)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 32)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262241)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 262241)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 32)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327681)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327681)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 40)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327713)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327713)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 40)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327745)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327745)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 40)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327777)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 327777)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 40)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393217)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393217)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 48)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393249)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393249)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 48)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393281)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393281)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 48)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393313)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 393313)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 48)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458753)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458753)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 56)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458785)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458785)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 56)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458817)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458817)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 56)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]);\n  output0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458849)] = (((half)(((float)input0[((((((((int)blockIdx.x) >> 6) * 524288) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 458849)]) / sqrtf((input2_shared[((((int)threadIdx.x) >> 4) + 56)] + 1.000000e-06f)))) * input1_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]);\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      4096,
      1,
      1
    ],
    "latency": 0.3010880947113037,
    "name": "Group0",
    "gain": 0
  }
]